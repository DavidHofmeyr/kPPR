// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cbin_alloc
NumericVector cbin_alloc(NumericVector x, int n, int nbin, double min, double max);
RcppExport SEXP _kPPR_cbin_alloc(SEXP xSEXP, SEXP nSEXP, SEXP nbinSEXP, SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type nbin(nbinSEXP);
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(cbin_alloc(x, n, nbin, min, max));
    return rcpp_result_gen;
END_RCPP
}
// bin_wts
NumericVector bin_wts(NumericVector x, NumericVector y, int n, int nbin, double min, double max);
RcppExport SEXP _kPPR_bin_wts(SEXP xSEXP, SEXP ySEXP, SEXP nSEXP, SEXP nbinSEXP, SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type nbin(nbinSEXP);
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(bin_wts(x, y, n, nbin, min, max));
    return rcpp_result_gen;
END_RCPP
}
// ksum
NumericVector ksum(NumericVector x, NumericVector y, NumericVector x_eval, double h, int n, int n_eval, int ord, NumericVector betas);
RcppExport SEXP _kPPR_ksum(SEXP xSEXP, SEXP ySEXP, SEXP x_evalSEXP, SEXP hSEXP, SEXP nSEXP, SEXP n_evalSEXP, SEXP ordSEXP, SEXP betasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_eval(x_evalSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_eval(n_evalSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    rcpp_result_gen = Rcpp::wrap(ksum(x, y, x_eval, h, n, n_eval, ord, betas));
    return rcpp_result_gen;
END_RCPP
}
// dksum
NumericVector dksum(NumericVector x, NumericVector y, NumericVector x_eval, double h, int n, int n_eval, int ord, NumericVector betas);
RcppExport SEXP _kPPR_dksum(SEXP xSEXP, SEXP ySEXP, SEXP x_evalSEXP, SEXP hSEXP, SEXP nSEXP, SEXP n_evalSEXP, SEXP ordSEXP, SEXP betasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_eval(x_evalSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_eval(n_evalSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    rcpp_result_gen = Rcpp::wrap(dksum(x, y, x_eval, h, n, n_eval, ord, betas));
    return rcpp_result_gen;
END_RCPP
}
// kndksum
NumericMatrix kndksum(NumericVector x, NumericVector y, NumericVector x_eval, double h, int n, int n_eval, int ord, NumericVector betas);
RcppExport SEXP _kPPR_kndksum(SEXP xSEXP, SEXP ySEXP, SEXP x_evalSEXP, SEXP hSEXP, SEXP nSEXP, SEXP n_evalSEXP, SEXP ordSEXP, SEXP betasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_eval(x_evalSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_eval(n_evalSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    rcpp_result_gen = Rcpp::wrap(kndksum(x, y, x_eval, h, n, n_eval, ord, betas));
    return rcpp_result_gen;
END_RCPP
}
// kndksum_bin
NumericMatrix kndksum_bin(NumericVector x, NumericVector y, NumericVector x_eval, NumericVector counts, double h, int n, int n_eval, int ord, NumericVector betas);
RcppExport SEXP _kPPR_kndksum_bin(SEXP xSEXP, SEXP ySEXP, SEXP x_evalSEXP, SEXP countsSEXP, SEXP hSEXP, SEXP nSEXP, SEXP n_evalSEXP, SEXP ordSEXP, SEXP betasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_eval(x_evalSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_eval(n_evalSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    rcpp_result_gen = Rcpp::wrap(kndksum_bin(x, y, x_eval, counts, h, n, n_eval, ord, betas));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_kPPR_cbin_alloc", (DL_FUNC) &_kPPR_cbin_alloc, 5},
    {"_kPPR_bin_wts", (DL_FUNC) &_kPPR_bin_wts, 6},
    {"_kPPR_ksum", (DL_FUNC) &_kPPR_ksum, 8},
    {"_kPPR_dksum", (DL_FUNC) &_kPPR_dksum, 8},
    {"_kPPR_kndksum", (DL_FUNC) &_kPPR_kndksum, 8},
    {"_kPPR_kndksum_bin", (DL_FUNC) &_kPPR_kndksum_bin, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_kPPR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
